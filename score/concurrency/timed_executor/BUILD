# *******************************************************************************
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0
#
# SPDX-License-Identifier: Apache-2.0
# *******************************************************************************
load("@score-baselibs//bazel:unit_tests.bzl", "cc_gtest_unit_test")
load("@score-baselibs//score/concurrency:compiler_featues.bzl", "COMPILER_FEATURES")

cc_library(
    name = "timed_task",
    srcs = ["timed_task.cpp"],
    hdrs = ["timed_task.h"],
    features = COMPILER_FEATURES,
    tags = ["FFI"],
    visibility = [
        "//visibility:public",
        # "@ddad//visibility:public",
    ],
    deps = [
        "@score-baselibs//score/concurrency:executor",
        "@score-baselibs//score/language/futurecpp",
    ],
)

cc_library(
    name = "periodic_task",
    srcs = ["periodic_task.cpp"],
    hdrs = ["periodic_task.h"],
    features = COMPILER_FEATURES,
    tags = ["FFI"],
    visibility = [
        "//visibility:public",
        # "@ddad//visibility:public",
    ],
    deps = [
        ":timed_task",
        "@score-baselibs//score/language/futurecpp",
    ],
)

cc_gtest_unit_test(
    name = "periodic_task_tests",
    srcs = ["periodic_task_test.cpp"],
    features = COMPILER_FEATURES + [
        "aborts_upon_exception",
    ],
    visibility = [
        # "@ddad@score-baselibs//score/concurrency/timed_executor:__subpackages__",
    ],
    deps = [
        ":periodic_task",
        "@score-baselibs//score/concurrency:clock",
        "@score-baselibs//score/concurrency:executor_mock",
    ],
)

cc_library(
    name = "delayed_task",
    srcs = ["delayed_task.cpp"],
    hdrs = ["delayed_task.h"],
    features = COMPILER_FEATURES,
    tags = ["FFI"],
    visibility = [
        "//visibility:public",
        # "@ddad//visibility:public",
    ],
    deps = [
        ":timed_task",
        "@score-baselibs//score/language/futurecpp",
    ],
)

cc_gtest_unit_test(
    name = "delayed_task_tests",
    srcs = ["delayed_task_test.cpp"],
    features = COMPILER_FEATURES + [
        "aborts_upon_exception",
    ],
    visibility = [
        # "@ddad@score-baselibs//score/concurrency/timed_executor:__subpackages__",
    ],
    deps = [
        ":delayed_task",
        "@score-baselibs//score/concurrency:clock",
        "@score-baselibs//score/concurrency:executor_mock",
    ],
)

cc_library(
    name = "timed_executor",
    srcs = ["timed_executor.cpp"],
    hdrs = ["timed_executor.h"],
    features = COMPILER_FEATURES,
    tags = ["FFI"],
    visibility = [
        "//visibility:public",
        # "@ddad//visibility:public",
    ],
    deps = [
        ":delayed_task",
        ":periodic_task",
        "@score-baselibs//score/language/futurecpp",
    ],
)

cc_library(
    name = "concurrent_timed_executor",
    srcs = ["concurrent_timed_executor.cpp"],
    hdrs = ["concurrent_timed_executor.h"],
    features = COMPILER_FEATURES,
    tags = ["FFI"],
    visibility = [
        "//visibility:public",
        # "@ddad//visibility:public",
    ],
    deps = [
        ":timed_executor",
        "@score-baselibs//score/language/futurecpp",
    ],
)

cc_library(
    name = "timed_executor_mock",
    testonly = True,
    srcs = ["timed_executor_mock.cpp"],
    hdrs = ["timed_executor_mock.h"],
    features = COMPILER_FEATURES,
    visibility = [
        "//visibility:public",
        # "@ddad//visibility:public",
    ],
    deps = [
        ":timed_executor",
        "@googletest//:gtest",
    ],
)

cc_gtest_unit_test(
    name = "concurrent_timed_executor_test",
    srcs = ["concurrent_timed_executor_test.cpp"],
    features = COMPILER_FEATURES + [
        "aborts_upon_exception",
    ],
    visibility = [
        # "@ddad@score-baselibs//score/concurrency/timed_executor:__subpackages__",
    ],
    deps = [
        ":concurrent_timed_executor",
        "@score-baselibs//score/concurrency:clock",
        "@score-baselibs//score/concurrency:executor_mock",
        "@score-baselibs//score/concurrency:thread_pool",
    ],
)
